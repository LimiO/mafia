syntax = "proto3";
package connection;

import "pkg/proto/game/actions.proto";
import "pkg/proto/game/state.proto";
import "pkg/proto/game/roles.proto";

option go_package = "mafia.connection";

message UserJoinRequest {
  string user_id = 1;
  string password = 2;
}

message UserJoinResponse {
  enum Type {
    OK = 0;
    EXISTS = 1;
    DEFINED = 2;
    STARTED = 3;
  };
  Type type = 1;
}

message ChatResponse {
  string user_id = 1;
  string text = 2;
}

message ListParticipantsRequest {
  uint32 game = 1;
}

message ListParticipantsResponse {
  repeated string users = 1;
}

message StartGameResponse {
  repeated string users = 1;
  roles.Role role = 2;
  uint32 game = 3;
}

message ServerResponse {
    oneof response {
      UserJoinResponse join = 1;
      ChatResponse chat = 2;
      state.StateResponse state = 3;
      StartGameResponse start = 4;
      actions.KillResponse kill = 5;
    }
}

service MafiaServer {
  rpc connect (UserJoinRequest) returns (stream ServerResponse);
  rpc listParticipants (ListParticipantsRequest) returns (ListParticipantsResponse);

  rpc voteBan (actions.VoteBanRequest) returns (actions.VoteBanResponse);
  rpc chat (actions.ChatRequest) returns (ChatResponse);
  rpc end (actions.EndRequest) returns (actions.EndResponse);
  rpc commit (actions.CommitRequest) returns (actions.CommitResponse);
  rpc publish (actions.PublishRequest) returns (actions.PublishResponse);
}
